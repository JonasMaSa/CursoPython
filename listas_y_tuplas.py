# -*- coding: utf-8 -*-
"""Listas y tuplas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CO4JtVdAKA-XUeYV6myAuR2YF8P1jlLK
"""

#Actividad 1: Funciones de Listas

asignaturas = ["Matematicas","Fisica","Quimica","Geografia","Fisica","Biologia","Orientacion","Fisica"]

print(f'La lista de asignaturas es {asignaturas}')

print(f'La funcion index devuelve el indice de un elemento determinado o error si no se encuentra ese elemento.\n'
      + f'Por ejemplo, Quimica es el elemento en la posicion {asignaturas.index("Quimica")}.')
print(f'La funcion count sirve para contar las veces que aparece un elemento determinado.\n'
      + f'Por ejemplo, Fisica aparece {asignaturas.count("Fisica")} veces.')
print(f'Y la funcion remove elimina la primera aparicion de un elemento determinado.\n'
      + f'Por ejemplo, al utilizar asignaturas.remove("Fisica"), obtenemos la nueva lista:')
asignaturas.remove("Fisica")
print(asignaturas)

#Actividad 2: Propiedades de la suma de vecttores
import matplotlib.pyplot as plt

def sumaVectores(z1,z2):
    return (z1[0]+z2[0],z1[1]+z2[1])

z1 = (2,1)
z2 = (3,4)
suma = sumaVectores(z1,z2)

# Conmutatividad
plt.quiver(0, 0, z1[0], z1[1], color='g', units='xy',scale=1)
plt.quiver(z1[0], z1[1], z2[0], z2[1], color='b',units='xy', scale=1)
plt.quiver(0, 0, z2[0], z2[1], color='y', units='xy',scale=1)
plt.quiver(z2[0], z2[1], z1[0], z1[1], color='c',units='xy', scale=1)
plt.quiver(0, 0, suma[0], suma[1], color='r',
           units='xy',scale=1)
plt.axis('scaled')
plt.xlim(0, 6)
plt.ylim(0, 6)
plt.show()

import matplotlib.pyplot as plt

def sumaVectoresA(z1,z2):
    return (z1[0]+z2[0],z1[1]+z2[1])

def sumaVectoresB(z2,z3):
    return (z2[0]+z3[0],z2[1]+z3[1])
z1 = (2,1)
z2 = (3,4)
z3 = (1,2)
sumaA = sumaVectores(z1,z2)
sumaB = sumaVectores(z2,z3)
suma = (z1[0]+z2[0]+z3[0], z1[1]+z2[1]+z3[1])
# Conmutatividad
plt.quiver(0, 0, sumaA[0], sumaA[1], color='g', units='xy',scale=1)
plt.quiver(sumaA[0], sumaA[1], z3[0], z3[1], color='b',units='xy', scale=1)
plt.quiver(0, 0, z1[0], z1[1], color='y', units='xy',scale=1)
plt.quiver(z1[0], z1[1], sumaB[0], sumaB[1], color='c',units='xy', scale=1)
plt.quiver(0, 0, suma[0], suma[1], color='r',
           units='xy',scale=1)
plt.axis('scaled')
plt.xlim(0, 10)
plt.ylim(0, 10)
plt.show()

#Actividad3: Funciones en tuplas
#Funcion minimo
tupla = ( 500, 800, 333 )
print("El elemento minimo de la tupla es: ")
print( min( tupla ) )

#Funcion suma
tupla = ( 500, 800, 333 )
print("La suma de los elementos de la tupla es: ")
print( sum( tupla ) )

#Actividad4:Diccionarios

ssDiametro = {'Sol': 1392000,'Mercurio' : 4879, 'Venus' : 12092, 'Tierra' : 12756, 'Marte' : 6792,
                    'Jupiter' : 142984 ,'Saturno': 120536, 'Urano': 50724, 'Neptuno':49244,
                    'Pluton': 2376.6}
for x in ssDiametro:
  ratio = ssDiametro[x]/ssDiametro['Tierra']
  print(f'La razon entre el diametro de {x} y el diametro de la Tierra es',ratio)